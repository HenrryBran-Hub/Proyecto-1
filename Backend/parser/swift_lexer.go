// Code generated from SwiftLexer.g4 by ANTLR 4.13.0. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type SwiftLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var SwiftLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func swiftlexerLexerInit() {
	staticData := &SwiftLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'Int'", "'Float'", "'String'", "'Bool'", "'Character'", "'true'",
		"'false'", "'var'", "'let'", "'nil'", "'if'", "'else'", "'switch'",
		"'case'", "'default'", "'break'", "'continue'", "'for'", "'in'", "'...'",
		"'while'", "'guard'", "'return'", "'func'", "'print'", "'inout'", "'append'",
		"'remove'", "'removeLast'", "'count'", "'isEmpty'", "'at'", "'repeating'",
		"'struct'", "'mutating'", "'self'", "", "", "", "", "", "'='", "':'",
		"';'", "'?'", "'('", "')'", "'!='", "'=='", "'!'", "'||'", "'&&'", "'>='",
		"'<='", "'>'", "'<'", "'%'", "'*'", "'/'", "'+'", "'-'", "'+='", "'-='",
		"'{'", "'}'", "'->'", "','", "'.'", "'_'", "'['", "']'",
	}
	staticData.SymbolicNames = []string{
		"", "INT", "FLOAT", "STRING", "BOOL", "CHARACT", "TRU", "FAL", "VAR",
		"LET", "NULO", "IF", "ELSE", "SWITCH", "CASE", "DEFAULT", "BREAK", "CONTINUE",
		"FOR", "IN", "RANGO", "WHILE", "GUARD", "RETURN", "FUNCION", "PRINT",
		"INOUT", "APPEND", "REMOVE", "REMOVELAST", "COUNT", "ISEMPTY", "AT",
		"REPEATING", "STRUCT", "MUTATING", "SELF", "NUMBER", "CADENA", "ID_VALIDO",
		"CHARACTER", "WS", "IG", "DOS_PUNTOS", "PUNTOCOMA", "CIERRE_INTE", "PARIZQ",
		"PARDER", "DIF", "IG_IG", "NOT", "OR", "AND", "MAY_IG", "MEN_IG", "MAYOR",
		"MENOR", "MODULO", "MUL", "DIV", "ADD", "SUB", "SUMA", "RESTA", "LLAVEIZQ",
		"LLAVEDER", "RETORNO", "COMA", "PUNTO", "GUIONBAJO", "CORCHIZQ", "CORCHDER",
		"WHITESPACE", "COMMENT", "LINE_COMMENT",
	}
	staticData.RuleNames = []string{
		"INT", "FLOAT", "STRING", "BOOL", "CHARACT", "TRU", "FAL", "VAR", "LET",
		"NULO", "IF", "ELSE", "SWITCH", "CASE", "DEFAULT", "BREAK", "CONTINUE",
		"FOR", "IN", "RANGO", "WHILE", "GUARD", "RETURN", "FUNCION", "PRINT",
		"INOUT", "APPEND", "REMOVE", "REMOVELAST", "COUNT", "ISEMPTY", "AT",
		"REPEATING", "STRUCT", "MUTATING", "SELF", "NUMBER", "CADENA", "ID_VALIDO",
		"CHARACTER", "ESCAPE", "WS", "IG", "DOS_PUNTOS", "PUNTOCOMA", "CIERRE_INTE",
		"PARIZQ", "PARDER", "DIF", "IG_IG", "NOT", "OR", "AND", "MAY_IG", "MEN_IG",
		"MAYOR", "MENOR", "MODULO", "MUL", "DIV", "ADD", "SUB", "SUMA", "RESTA",
		"LLAVEIZQ", "LLAVEDER", "RETORNO", "COMA", "PUNTO", "GUIONBAJO", "CORCHIZQ",
		"CORCHDER", "WHITESPACE", "COMMENT", "LINE_COMMENT", "ESC_SEQ",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 74, 521, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67,
		2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2, 71, 7, 71, 2, 72, 7, 72, 2,
		73, 7, 73, 2, 74, 7, 74, 2, 75, 7, 75, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
		3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1,
		4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1,
		6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1,
		9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12,
		1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1,
		13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15,
		1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1,
		16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 19,
		1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1,
		21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22,
		1, 22, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1,
		24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26,
		1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1,
		27, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28,
		1, 28, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1,
		30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 32, 1, 32, 1, 32,
		1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1,
		33, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34,
		1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 36, 4, 36, 373, 8,
		36, 11, 36, 12, 36, 374, 1, 36, 1, 36, 4, 36, 379, 8, 36, 11, 36, 12, 36,
		380, 3, 36, 383, 8, 36, 1, 37, 1, 37, 5, 37, 387, 8, 37, 10, 37, 12, 37,
		390, 9, 37, 1, 37, 1, 37, 1, 38, 1, 38, 5, 38, 396, 8, 38, 10, 38, 12,
		38, 399, 9, 38, 1, 39, 1, 39, 1, 39, 3, 39, 404, 8, 39, 1, 39, 1, 39, 1,
		40, 1, 40, 1, 40, 1, 41, 4, 41, 412, 8, 41, 11, 41, 12, 41, 413, 1, 41,
		1, 41, 1, 42, 1, 42, 1, 43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 1,
		46, 1, 47, 1, 47, 1, 48, 1, 48, 1, 48, 1, 49, 1, 49, 1, 49, 1, 50, 1, 50,
		1, 51, 1, 51, 1, 51, 1, 52, 1, 52, 1, 52, 1, 53, 1, 53, 1, 53, 1, 54, 1,
		54, 1, 54, 1, 55, 1, 55, 1, 56, 1, 56, 1, 57, 1, 57, 1, 58, 1, 58, 1, 59,
		1, 59, 1, 60, 1, 60, 1, 61, 1, 61, 1, 62, 1, 62, 1, 62, 1, 63, 1, 63, 1,
		63, 1, 64, 1, 64, 1, 65, 1, 65, 1, 66, 1, 66, 1, 66, 1, 67, 1, 67, 1, 68,
		1, 68, 1, 69, 1, 69, 1, 70, 1, 70, 1, 71, 1, 71, 1, 72, 4, 72, 488, 8,
		72, 11, 72, 12, 72, 489, 1, 72, 1, 72, 1, 73, 1, 73, 1, 73, 1, 73, 5, 73,
		498, 8, 73, 10, 73, 12, 73, 501, 9, 73, 1, 73, 1, 73, 1, 73, 1, 73, 1,
		73, 1, 74, 1, 74, 1, 74, 1, 74, 5, 74, 512, 8, 74, 10, 74, 12, 74, 515,
		9, 74, 1, 74, 1, 74, 1, 75, 1, 75, 1, 75, 1, 499, 0, 76, 1, 1, 3, 2, 5,
		3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25,
		13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43,
		22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61,
		31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79,
		40, 81, 0, 83, 41, 85, 42, 87, 43, 89, 44, 91, 45, 93, 46, 95, 47, 97,
		48, 99, 49, 101, 50, 103, 51, 105, 52, 107, 53, 109, 54, 111, 55, 113,
		56, 115, 57, 117, 58, 119, 59, 121, 60, 123, 61, 125, 62, 127, 63, 129,
		64, 131, 65, 133, 66, 135, 67, 137, 68, 139, 69, 141, 70, 143, 71, 145,
		72, 147, 73, 149, 74, 151, 0, 1, 0, 10, 1, 0, 48, 57, 1, 0, 34, 34, 3,
		0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 4, 0,
		10, 10, 13, 13, 39, 39, 92, 92, 5, 0, 39, 39, 92, 92, 110, 110, 114, 114,
		116, 116, 3, 0, 9, 10, 13, 13, 32, 32, 4, 0, 9, 10, 13, 13, 32, 32, 92,
		92, 2, 0, 10, 10, 13, 13, 7, 0, 32, 33, 35, 35, 43, 43, 45, 46, 58, 58,
		64, 64, 91, 93, 528, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0,
		0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0,
		0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1,
		0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29,
		1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0,
		37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0,
		0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0,
		0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0,
		0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1,
		0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75,
		1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0,
		85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0,
		0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0,
		0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0, 105, 1, 0, 0, 0, 0, 107,
		1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111, 1, 0, 0, 0, 0, 113, 1, 0, 0, 0,
		0, 115, 1, 0, 0, 0, 0, 117, 1, 0, 0, 0, 0, 119, 1, 0, 0, 0, 0, 121, 1,
		0, 0, 0, 0, 123, 1, 0, 0, 0, 0, 125, 1, 0, 0, 0, 0, 127, 1, 0, 0, 0, 0,
		129, 1, 0, 0, 0, 0, 131, 1, 0, 0, 0, 0, 133, 1, 0, 0, 0, 0, 135, 1, 0,
		0, 0, 0, 137, 1, 0, 0, 0, 0, 139, 1, 0, 0, 0, 0, 141, 1, 0, 0, 0, 0, 143,
		1, 0, 0, 0, 0, 145, 1, 0, 0, 0, 0, 147, 1, 0, 0, 0, 0, 149, 1, 0, 0, 0,
		1, 153, 1, 0, 0, 0, 3, 157, 1, 0, 0, 0, 5, 163, 1, 0, 0, 0, 7, 170, 1,
		0, 0, 0, 9, 175, 1, 0, 0, 0, 11, 185, 1, 0, 0, 0, 13, 190, 1, 0, 0, 0,
		15, 196, 1, 0, 0, 0, 17, 200, 1, 0, 0, 0, 19, 204, 1, 0, 0, 0, 21, 208,
		1, 0, 0, 0, 23, 211, 1, 0, 0, 0, 25, 216, 1, 0, 0, 0, 27, 223, 1, 0, 0,
		0, 29, 228, 1, 0, 0, 0, 31, 236, 1, 0, 0, 0, 33, 242, 1, 0, 0, 0, 35, 251,
		1, 0, 0, 0, 37, 255, 1, 0, 0, 0, 39, 258, 1, 0, 0, 0, 41, 262, 1, 0, 0,
		0, 43, 268, 1, 0, 0, 0, 45, 274, 1, 0, 0, 0, 47, 281, 1, 0, 0, 0, 49, 286,
		1, 0, 0, 0, 51, 292, 1, 0, 0, 0, 53, 298, 1, 0, 0, 0, 55, 305, 1, 0, 0,
		0, 57, 312, 1, 0, 0, 0, 59, 323, 1, 0, 0, 0, 61, 329, 1, 0, 0, 0, 63, 337,
		1, 0, 0, 0, 65, 340, 1, 0, 0, 0, 67, 350, 1, 0, 0, 0, 69, 357, 1, 0, 0,
		0, 71, 366, 1, 0, 0, 0, 73, 372, 1, 0, 0, 0, 75, 384, 1, 0, 0, 0, 77, 393,
		1, 0, 0, 0, 79, 400, 1, 0, 0, 0, 81, 407, 1, 0, 0, 0, 83, 411, 1, 0, 0,
		0, 85, 417, 1, 0, 0, 0, 87, 419, 1, 0, 0, 0, 89, 421, 1, 0, 0, 0, 91, 423,
		1, 0, 0, 0, 93, 425, 1, 0, 0, 0, 95, 427, 1, 0, 0, 0, 97, 429, 1, 0, 0,
		0, 99, 432, 1, 0, 0, 0, 101, 435, 1, 0, 0, 0, 103, 437, 1, 0, 0, 0, 105,
		440, 1, 0, 0, 0, 107, 443, 1, 0, 0, 0, 109, 446, 1, 0, 0, 0, 111, 449,
		1, 0, 0, 0, 113, 451, 1, 0, 0, 0, 115, 453, 1, 0, 0, 0, 117, 455, 1, 0,
		0, 0, 119, 457, 1, 0, 0, 0, 121, 459, 1, 0, 0, 0, 123, 461, 1, 0, 0, 0,
		125, 463, 1, 0, 0, 0, 127, 466, 1, 0, 0, 0, 129, 469, 1, 0, 0, 0, 131,
		471, 1, 0, 0, 0, 133, 473, 1, 0, 0, 0, 135, 476, 1, 0, 0, 0, 137, 478,
		1, 0, 0, 0, 139, 480, 1, 0, 0, 0, 141, 482, 1, 0, 0, 0, 143, 484, 1, 0,
		0, 0, 145, 487, 1, 0, 0, 0, 147, 493, 1, 0, 0, 0, 149, 507, 1, 0, 0, 0,
		151, 518, 1, 0, 0, 0, 153, 154, 5, 73, 0, 0, 154, 155, 5, 110, 0, 0, 155,
		156, 5, 116, 0, 0, 156, 2, 1, 0, 0, 0, 157, 158, 5, 70, 0, 0, 158, 159,
		5, 108, 0, 0, 159, 160, 5, 111, 0, 0, 160, 161, 5, 97, 0, 0, 161, 162,
		5, 116, 0, 0, 162, 4, 1, 0, 0, 0, 163, 164, 5, 83, 0, 0, 164, 165, 5, 116,
		0, 0, 165, 166, 5, 114, 0, 0, 166, 167, 5, 105, 0, 0, 167, 168, 5, 110,
		0, 0, 168, 169, 5, 103, 0, 0, 169, 6, 1, 0, 0, 0, 170, 171, 5, 66, 0, 0,
		171, 172, 5, 111, 0, 0, 172, 173, 5, 111, 0, 0, 173, 174, 5, 108, 0, 0,
		174, 8, 1, 0, 0, 0, 175, 176, 5, 67, 0, 0, 176, 177, 5, 104, 0, 0, 177,
		178, 5, 97, 0, 0, 178, 179, 5, 114, 0, 0, 179, 180, 5, 97, 0, 0, 180, 181,
		5, 99, 0, 0, 181, 182, 5, 116, 0, 0, 182, 183, 5, 101, 0, 0, 183, 184,
		5, 114, 0, 0, 184, 10, 1, 0, 0, 0, 185, 186, 5, 116, 0, 0, 186, 187, 5,
		114, 0, 0, 187, 188, 5, 117, 0, 0, 188, 189, 5, 101, 0, 0, 189, 12, 1,
		0, 0, 0, 190, 191, 5, 102, 0, 0, 191, 192, 5, 97, 0, 0, 192, 193, 5, 108,
		0, 0, 193, 194, 5, 115, 0, 0, 194, 195, 5, 101, 0, 0, 195, 14, 1, 0, 0,
		0, 196, 197, 5, 118, 0, 0, 197, 198, 5, 97, 0, 0, 198, 199, 5, 114, 0,
		0, 199, 16, 1, 0, 0, 0, 200, 201, 5, 108, 0, 0, 201, 202, 5, 101, 0, 0,
		202, 203, 5, 116, 0, 0, 203, 18, 1, 0, 0, 0, 204, 205, 5, 110, 0, 0, 205,
		206, 5, 105, 0, 0, 206, 207, 5, 108, 0, 0, 207, 20, 1, 0, 0, 0, 208, 209,
		5, 105, 0, 0, 209, 210, 5, 102, 0, 0, 210, 22, 1, 0, 0, 0, 211, 212, 5,
		101, 0, 0, 212, 213, 5, 108, 0, 0, 213, 214, 5, 115, 0, 0, 214, 215, 5,
		101, 0, 0, 215, 24, 1, 0, 0, 0, 216, 217, 5, 115, 0, 0, 217, 218, 5, 119,
		0, 0, 218, 219, 5, 105, 0, 0, 219, 220, 5, 116, 0, 0, 220, 221, 5, 99,
		0, 0, 221, 222, 5, 104, 0, 0, 222, 26, 1, 0, 0, 0, 223, 224, 5, 99, 0,
		0, 224, 225, 5, 97, 0, 0, 225, 226, 5, 115, 0, 0, 226, 227, 5, 101, 0,
		0, 227, 28, 1, 0, 0, 0, 228, 229, 5, 100, 0, 0, 229, 230, 5, 101, 0, 0,
		230, 231, 5, 102, 0, 0, 231, 232, 5, 97, 0, 0, 232, 233, 5, 117, 0, 0,
		233, 234, 5, 108, 0, 0, 234, 235, 5, 116, 0, 0, 235, 30, 1, 0, 0, 0, 236,
		237, 5, 98, 0, 0, 237, 238, 5, 114, 0, 0, 238, 239, 5, 101, 0, 0, 239,
		240, 5, 97, 0, 0, 240, 241, 5, 107, 0, 0, 241, 32, 1, 0, 0, 0, 242, 243,
		5, 99, 0, 0, 243, 244, 5, 111, 0, 0, 244, 245, 5, 110, 0, 0, 245, 246,
		5, 116, 0, 0, 246, 247, 5, 105, 0, 0, 247, 248, 5, 110, 0, 0, 248, 249,
		5, 117, 0, 0, 249, 250, 5, 101, 0, 0, 250, 34, 1, 0, 0, 0, 251, 252, 5,
		102, 0, 0, 252, 253, 5, 111, 0, 0, 253, 254, 5, 114, 0, 0, 254, 36, 1,
		0, 0, 0, 255, 256, 5, 105, 0, 0, 256, 257, 5, 110, 0, 0, 257, 38, 1, 0,
		0, 0, 258, 259, 5, 46, 0, 0, 259, 260, 5, 46, 0, 0, 260, 261, 5, 46, 0,
		0, 261, 40, 1, 0, 0, 0, 262, 263, 5, 119, 0, 0, 263, 264, 5, 104, 0, 0,
		264, 265, 5, 105, 0, 0, 265, 266, 5, 108, 0, 0, 266, 267, 5, 101, 0, 0,
		267, 42, 1, 0, 0, 0, 268, 269, 5, 103, 0, 0, 269, 270, 5, 117, 0, 0, 270,
		271, 5, 97, 0, 0, 271, 272, 5, 114, 0, 0, 272, 273, 5, 100, 0, 0, 273,
		44, 1, 0, 0, 0, 274, 275, 5, 114, 0, 0, 275, 276, 5, 101, 0, 0, 276, 277,
		5, 116, 0, 0, 277, 278, 5, 117, 0, 0, 278, 279, 5, 114, 0, 0, 279, 280,
		5, 110, 0, 0, 280, 46, 1, 0, 0, 0, 281, 282, 5, 102, 0, 0, 282, 283, 5,
		117, 0, 0, 283, 284, 5, 110, 0, 0, 284, 285, 5, 99, 0, 0, 285, 48, 1, 0,
		0, 0, 286, 287, 5, 112, 0, 0, 287, 288, 5, 114, 0, 0, 288, 289, 5, 105,
		0, 0, 289, 290, 5, 110, 0, 0, 290, 291, 5, 116, 0, 0, 291, 50, 1, 0, 0,
		0, 292, 293, 5, 105, 0, 0, 293, 294, 5, 110, 0, 0, 294, 295, 5, 111, 0,
		0, 295, 296, 5, 117, 0, 0, 296, 297, 5, 116, 0, 0, 297, 52, 1, 0, 0, 0,
		298, 299, 5, 97, 0, 0, 299, 300, 5, 112, 0, 0, 300, 301, 5, 112, 0, 0,
		301, 302, 5, 101, 0, 0, 302, 303, 5, 110, 0, 0, 303, 304, 5, 100, 0, 0,
		304, 54, 1, 0, 0, 0, 305, 306, 5, 114, 0, 0, 306, 307, 5, 101, 0, 0, 307,
		308, 5, 109, 0, 0, 308, 309, 5, 111, 0, 0, 309, 310, 5, 118, 0, 0, 310,
		311, 5, 101, 0, 0, 311, 56, 1, 0, 0, 0, 312, 313, 5, 114, 0, 0, 313, 314,
		5, 101, 0, 0, 314, 315, 5, 109, 0, 0, 315, 316, 5, 111, 0, 0, 316, 317,
		5, 118, 0, 0, 317, 318, 5, 101, 0, 0, 318, 319, 5, 76, 0, 0, 319, 320,
		5, 97, 0, 0, 320, 321, 5, 115, 0, 0, 321, 322, 5, 116, 0, 0, 322, 58, 1,
		0, 0, 0, 323, 324, 5, 99, 0, 0, 324, 325, 5, 111, 0, 0, 325, 326, 5, 117,
		0, 0, 326, 327, 5, 110, 0, 0, 327, 328, 5, 116, 0, 0, 328, 60, 1, 0, 0,
		0, 329, 330, 5, 105, 0, 0, 330, 331, 5, 115, 0, 0, 331, 332, 5, 69, 0,
		0, 332, 333, 5, 109, 0, 0, 333, 334, 5, 112, 0, 0, 334, 335, 5, 116, 0,
		0, 335, 336, 5, 121, 0, 0, 336, 62, 1, 0, 0, 0, 337, 338, 5, 97, 0, 0,
		338, 339, 5, 116, 0, 0, 339, 64, 1, 0, 0, 0, 340, 341, 5, 114, 0, 0, 341,
		342, 5, 101, 0, 0, 342, 343, 5, 112, 0, 0, 343, 344, 5, 101, 0, 0, 344,
		345, 5, 97, 0, 0, 345, 346, 5, 116, 0, 0, 346, 347, 5, 105, 0, 0, 347,
		348, 5, 110, 0, 0, 348, 349, 5, 103, 0, 0, 349, 66, 1, 0, 0, 0, 350, 351,
		5, 115, 0, 0, 351, 352, 5, 116, 0, 0, 352, 353, 5, 114, 0, 0, 353, 354,
		5, 117, 0, 0, 354, 355, 5, 99, 0, 0, 355, 356, 5, 116, 0, 0, 356, 68, 1,
		0, 0, 0, 357, 358, 5, 109, 0, 0, 358, 359, 5, 117, 0, 0, 359, 360, 5, 116,
		0, 0, 360, 361, 5, 97, 0, 0, 361, 362, 5, 116, 0, 0, 362, 363, 5, 105,
		0, 0, 363, 364, 5, 110, 0, 0, 364, 365, 5, 103, 0, 0, 365, 70, 1, 0, 0,
		0, 366, 367, 5, 115, 0, 0, 367, 368, 5, 101, 0, 0, 368, 369, 5, 108, 0,
		0, 369, 370, 5, 102, 0, 0, 370, 72, 1, 0, 0, 0, 371, 373, 7, 0, 0, 0, 372,
		371, 1, 0, 0, 0, 373, 374, 1, 0, 0, 0, 374, 372, 1, 0, 0, 0, 374, 375,
		1, 0, 0, 0, 375, 382, 1, 0, 0, 0, 376, 378, 5, 46, 0, 0, 377, 379, 7, 0,
		0, 0, 378, 377, 1, 0, 0, 0, 379, 380, 1, 0, 0, 0, 380, 378, 1, 0, 0, 0,
		380, 381, 1, 0, 0, 0, 381, 383, 1, 0, 0, 0, 382, 376, 1, 0, 0, 0, 382,
		383, 1, 0, 0, 0, 383, 74, 1, 0, 0, 0, 384, 388, 5, 34, 0, 0, 385, 387,
		8, 1, 0, 0, 386, 385, 1, 0, 0, 0, 387, 390, 1, 0, 0, 0, 388, 386, 1, 0,
		0, 0, 388, 389, 1, 0, 0, 0, 389, 391, 1, 0, 0, 0, 390, 388, 1, 0, 0, 0,
		391, 392, 5, 34, 0, 0, 392, 76, 1, 0, 0, 0, 393, 397, 7, 2, 0, 0, 394,
		396, 7, 3, 0, 0, 395, 394, 1, 0, 0, 0, 396, 399, 1, 0, 0, 0, 397, 395,
		1, 0, 0, 0, 397, 398, 1, 0, 0, 0, 398, 78, 1, 0, 0, 0, 399, 397, 1, 0,
		0, 0, 400, 403, 5, 39, 0, 0, 401, 404, 3, 81, 40, 0, 402, 404, 8, 4, 0,
		0, 403, 401, 1, 0, 0, 0, 403, 402, 1, 0, 0, 0, 404, 405, 1, 0, 0, 0, 405,
		406, 5, 39, 0, 0, 406, 80, 1, 0, 0, 0, 407, 408, 5, 92, 0, 0, 408, 409,
		7, 5, 0, 0, 409, 82, 1, 0, 0, 0, 410, 412, 7, 6, 0, 0, 411, 410, 1, 0,
		0, 0, 412, 413, 1, 0, 0, 0, 413, 411, 1, 0, 0, 0, 413, 414, 1, 0, 0, 0,
		414, 415, 1, 0, 0, 0, 415, 416, 6, 41, 0, 0, 416, 84, 1, 0, 0, 0, 417,
		418, 5, 61, 0, 0, 418, 86, 1, 0, 0, 0, 419, 420, 5, 58, 0, 0, 420, 88,
		1, 0, 0, 0, 421, 422, 5, 59, 0, 0, 422, 90, 1, 0, 0, 0, 423, 424, 5, 63,
		0, 0, 424, 92, 1, 0, 0, 0, 425, 426, 5, 40, 0, 0, 426, 94, 1, 0, 0, 0,
		427, 428, 5, 41, 0, 0, 428, 96, 1, 0, 0, 0, 429, 430, 5, 33, 0, 0, 430,
		431, 5, 61, 0, 0, 431, 98, 1, 0, 0, 0, 432, 433, 5, 61, 0, 0, 433, 434,
		5, 61, 0, 0, 434, 100, 1, 0, 0, 0, 435, 436, 5, 33, 0, 0, 436, 102, 1,
		0, 0, 0, 437, 438, 5, 124, 0, 0, 438, 439, 5, 124, 0, 0, 439, 104, 1, 0,
		0, 0, 440, 441, 5, 38, 0, 0, 441, 442, 5, 38, 0, 0, 442, 106, 1, 0, 0,
		0, 443, 444, 5, 62, 0, 0, 444, 445, 5, 61, 0, 0, 445, 108, 1, 0, 0, 0,
		446, 447, 5, 60, 0, 0, 447, 448, 5, 61, 0, 0, 448, 110, 1, 0, 0, 0, 449,
		450, 5, 62, 0, 0, 450, 112, 1, 0, 0, 0, 451, 452, 5, 60, 0, 0, 452, 114,
		1, 0, 0, 0, 453, 454, 5, 37, 0, 0, 454, 116, 1, 0, 0, 0, 455, 456, 5, 42,
		0, 0, 456, 118, 1, 0, 0, 0, 457, 458, 5, 47, 0, 0, 458, 120, 1, 0, 0, 0,
		459, 460, 5, 43, 0, 0, 460, 122, 1, 0, 0, 0, 461, 462, 5, 45, 0, 0, 462,
		124, 1, 0, 0, 0, 463, 464, 5, 43, 0, 0, 464, 465, 5, 61, 0, 0, 465, 126,
		1, 0, 0, 0, 466, 467, 5, 45, 0, 0, 467, 468, 5, 61, 0, 0, 468, 128, 1,
		0, 0, 0, 469, 470, 5, 123, 0, 0, 470, 130, 1, 0, 0, 0, 471, 472, 5, 125,
		0, 0, 472, 132, 1, 0, 0, 0, 473, 474, 5, 45, 0, 0, 474, 475, 5, 62, 0,
		0, 475, 134, 1, 0, 0, 0, 476, 477, 5, 44, 0, 0, 477, 136, 1, 0, 0, 0, 478,
		479, 5, 46, 0, 0, 479, 138, 1, 0, 0, 0, 480, 481, 5, 95, 0, 0, 481, 140,
		1, 0, 0, 0, 482, 483, 5, 91, 0, 0, 483, 142, 1, 0, 0, 0, 484, 485, 5, 93,
		0, 0, 485, 144, 1, 0, 0, 0, 486, 488, 7, 7, 0, 0, 487, 486, 1, 0, 0, 0,
		488, 489, 1, 0, 0, 0, 489, 487, 1, 0, 0, 0, 489, 490, 1, 0, 0, 0, 490,
		491, 1, 0, 0, 0, 491, 492, 6, 72, 0, 0, 492, 146, 1, 0, 0, 0, 493, 494,
		5, 47, 0, 0, 494, 495, 5, 42, 0, 0, 495, 499, 1, 0, 0, 0, 496, 498, 9,
		0, 0, 0, 497, 496, 1, 0, 0, 0, 498, 501, 1, 0, 0, 0, 499, 500, 1, 0, 0,
		0, 499, 497, 1, 0, 0, 0, 500, 502, 1, 0, 0, 0, 501, 499, 1, 0, 0, 0, 502,
		503, 5, 42, 0, 0, 503, 504, 5, 47, 0, 0, 504, 505, 1, 0, 0, 0, 505, 506,
		6, 73, 0, 0, 506, 148, 1, 0, 0, 0, 507, 508, 5, 47, 0, 0, 508, 509, 5,
		47, 0, 0, 509, 513, 1, 0, 0, 0, 510, 512, 8, 8, 0, 0, 511, 510, 1, 0, 0,
		0, 512, 515, 1, 0, 0, 0, 513, 511, 1, 0, 0, 0, 513, 514, 1, 0, 0, 0, 514,
		516, 1, 0, 0, 0, 515, 513, 1, 0, 0, 0, 516, 517, 6, 74, 0, 0, 517, 150,
		1, 0, 0, 0, 518, 519, 5, 92, 0, 0, 519, 520, 7, 9, 0, 0, 520, 152, 1, 0,
		0, 0, 11, 0, 374, 380, 382, 388, 397, 403, 413, 489, 499, 513, 1, 6, 0,
		0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// SwiftLexerInit initializes any static state used to implement SwiftLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewSwiftLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func SwiftLexerInit() {
	staticData := &SwiftLexerLexerStaticData
	staticData.once.Do(swiftlexerLexerInit)
}

// NewSwiftLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewSwiftLexer(input antlr.CharStream) *SwiftLexer {
	SwiftLexerInit()
	l := new(SwiftLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &SwiftLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "SwiftLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SwiftLexer tokens.
const (
	SwiftLexerINT          = 1
	SwiftLexerFLOAT        = 2
	SwiftLexerSTRING       = 3
	SwiftLexerBOOL         = 4
	SwiftLexerCHARACT      = 5
	SwiftLexerTRU          = 6
	SwiftLexerFAL          = 7
	SwiftLexerVAR          = 8
	SwiftLexerLET          = 9
	SwiftLexerNULO         = 10
	SwiftLexerIF           = 11
	SwiftLexerELSE         = 12
	SwiftLexerSWITCH       = 13
	SwiftLexerCASE         = 14
	SwiftLexerDEFAULT      = 15
	SwiftLexerBREAK        = 16
	SwiftLexerCONTINUE     = 17
	SwiftLexerFOR          = 18
	SwiftLexerIN           = 19
	SwiftLexerRANGO        = 20
	SwiftLexerWHILE        = 21
	SwiftLexerGUARD        = 22
	SwiftLexerRETURN       = 23
	SwiftLexerFUNCION      = 24
	SwiftLexerPRINT        = 25
	SwiftLexerINOUT        = 26
	SwiftLexerAPPEND       = 27
	SwiftLexerREMOVE       = 28
	SwiftLexerREMOVELAST   = 29
	SwiftLexerCOUNT        = 30
	SwiftLexerISEMPTY      = 31
	SwiftLexerAT           = 32
	SwiftLexerREPEATING    = 33
	SwiftLexerSTRUCT       = 34
	SwiftLexerMUTATING     = 35
	SwiftLexerSELF         = 36
	SwiftLexerNUMBER       = 37
	SwiftLexerCADENA       = 38
	SwiftLexerID_VALIDO    = 39
	SwiftLexerCHARACTER    = 40
	SwiftLexerWS           = 41
	SwiftLexerIG           = 42
	SwiftLexerDOS_PUNTOS   = 43
	SwiftLexerPUNTOCOMA    = 44
	SwiftLexerCIERRE_INTE  = 45
	SwiftLexerPARIZQ       = 46
	SwiftLexerPARDER       = 47
	SwiftLexerDIF          = 48
	SwiftLexerIG_IG        = 49
	SwiftLexerNOT          = 50
	SwiftLexerOR           = 51
	SwiftLexerAND          = 52
	SwiftLexerMAY_IG       = 53
	SwiftLexerMEN_IG       = 54
	SwiftLexerMAYOR        = 55
	SwiftLexerMENOR        = 56
	SwiftLexerMODULO       = 57
	SwiftLexerMUL          = 58
	SwiftLexerDIV          = 59
	SwiftLexerADD          = 60
	SwiftLexerSUB          = 61
	SwiftLexerSUMA         = 62
	SwiftLexerRESTA        = 63
	SwiftLexerLLAVEIZQ     = 64
	SwiftLexerLLAVEDER     = 65
	SwiftLexerRETORNO      = 66
	SwiftLexerCOMA         = 67
	SwiftLexerPUNTO        = 68
	SwiftLexerGUIONBAJO    = 69
	SwiftLexerCORCHIZQ     = 70
	SwiftLexerCORCHDER     = 71
	SwiftLexerWHITESPACE   = 72
	SwiftLexerCOMMENT      = 73
	SwiftLexerLINE_COMMENT = 74
)
